--- a/net/minecraft/resources/RegistryResourceAccess.java
+++ b/net/minecraft/resources/RegistryResourceAccess.java
@@ -66,6 +_,7 @@
 
                      try {
                         JsonElement jsonelement = JsonParser.parseReader(reader);
+                        if (jsonelement != null) jsonelement.getAsJsonObject().addProperty("forge:registry_name", p_195895_.m_135782_().toString());
                         optional = Optional.of(p_195896_.parse(p_195893_, jsonelement).map(RegistryResourceAccess.ParsedEntry::m_195956_));
                      } catch (Throwable throwable2) {
                         try {
@@ -125,6 +_,8 @@
          if (optional.isPresent()) {
             f_195912_.error("Error adding element: {}", (Object)optional.get().message());
          } else {
+            final JsonElement element = dataresult.result().get();
+            if (element instanceof com.google.gson.JsonObject jsonObject) jsonObject.addProperty("forge:registry_name", p_206838_.m_135782_().toString());
             this.f_195913_.put(p_206838_, new RegistryResourceAccess.InMemoryStorage.Entry(dataresult.result().get(), p_206840_, p_206842_));
          }
 
@@ -138,6 +_,8 @@
 
       public <E> Optional<DataResult<RegistryResourceAccess.ParsedEntry<E>>> m_183313_(DynamicOps<JsonElement> p_195917_, ResourceKey<? extends Registry<E>> p_195918_, ResourceKey<E> p_195919_, Decoder<E> p_195920_) {
          RegistryResourceAccess.InMemoryStorage.Entry registryresourceaccess$inmemorystorage$entry = this.f_195913_.get(p_195919_);
+         if (registryresourceaccess$inmemorystorage$entry != null && registryresourceaccess$inmemorystorage$entry.f_195936_ != null && registryresourceaccess$inmemorystorage$entry.f_195936_.isJsonObject())
+            registryresourceaccess$inmemorystorage$entry.f_195936_.getAsJsonObject().addProperty("forge:registry_name", p_195919_.m_135782_().toString());
          return registryresourceaccess$inmemorystorage$entry == null ? Optional.of(DataResult.error("Unknown element: " + p_195919_)) : Optional.of(p_195920_.parse(p_195917_, registryresourceaccess$inmemorystorage$entry.f_195936_).setLifecycle(registryresourceaccess$inmemorystorage$entry.f_195938_).map((p_195930_) -> {
             return RegistryResourceAccess.ParsedEntry.m_195958_(p_195930_, registryresourceaccess$inmemorystorage$entry.f_195937_);
          }));
